<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MemberRepository">

  <!--select-->

  <select id="selectCountId" parameterType="String" resultType="int">
    select count(member_id) from member where user_id = #{user_id}
  </select>

  <select id="selectCountEmail" parameterType="String" resultType="int">
    select count(member_id) from member where email = #{email}
  </select>

  <select id="selectCountNick" parameterType="map" resultType="int">
    select count(member_id)
    from member
    where
    <choose>
      <when test="member_id != null">nickname = #{nickname} and member_id != #{member_id}</when>
      <otherwise>nickname = #{nickname}</otherwise>
    </choose>
  </select>

  <select id="selectMemberId" parameterType="String" resultType="int">
    select member_id from member where user_id = #{user_id}
  </select>

  <select id="selectEnabled" parameterType="int" resultType="int">
    select enabled from member where member_id = #{member_id}
  </select>

  <select id="selectMember" parameterType="int" resultType="map">
    select member_id, user_id, nickname, email, method, task, exam, date_format(reg_date, '%Y.%m.%d %T') as reg_date, evaluation_count
    from member
    where member_id = #{member_id}
  </select>

  <select id="selectPassword" parameterType="int" resultType="String">
    select password from member where member_id = #{member_id}
  </select>

  <select id="selectId" parameterType="String" resultType="map">
    select member_id, user_id from member where email = #{email}
  </select>

  <select id="selectCountSearch" parameterType="map" resultType="int">
    select count(member_search_id)
    from member_search
    where member_id = #{member_id} and ip = inet_aton(#{ip}) and date(search_date) = curdate()
  </select>

  <select id="selectSearch" parameterType="int" resultType="int">
    select search from member where member_id = #{member_id}
  </select>

  <select id="selectMemberTendency" parameterType="int" resultType="map">
    select method as member_method, task as member_task, exam as member_exam from member where member_id = #{member_id}
  </select>


  <!--insert-->

  <insert id="insertMember" parameterType="map">
    insert into member (user_id, password, nickname, email, method, task, exam, eval_date)
    values (#{user_id},#{password},#{nickname},#{email},#{method},#{task},#{exam}, now())
  </insert>

  <insert id="insertRole" parameterType="int">
    insert into member_role (member_id) values (#{member_id})
  </insert>

  <insert id="insertSearch" parameterType="map">
    insert into member_search (member_id, ip) values (#{member_id},inet_aton(#{ip}))
  </insert>


  <!--update-->

  <update id="updateEnabled" parameterType="int">
    update member
    set
    enabled = 1
    where member_id = #{member_id}
  </update>

  <update id="updateMember" parameterType="map">
    update member
    set
    nickname = #{nickname},
    method = #{method},
    task = #{task},
    exam = #{exam}
    where member_id = #{member_id}
  </update>

  <update id="updateEvaluation" parameterType="int">
    update member
    set
    evaluation_count = evaluation_count + 1,
    eval_date = now()
    where member_id = #{member_id}
  </update>

  <update id="updateUnEvaluationCount" parameterType="int">
    update member
    set evaluation_count = evaluation_count - 1
    where member_id = #{member_id}
  </update>

  <update id="updatePassword" parameterType="map">
    update member
    set
    password = #{password}
    where member_id = #{member_id}
  </update>

  <update id="updateLocked" parameterType="int">
    update member
    set
    nonlocked = 0
    where member_id = #{member_id}
  </update>

  <update id="updateSearch" parameterType="int">
    update member
    set
    search = search + 1
    where member_id = #{member_id}
  </update>

  <update id="updateSearchZero" parameterType="int">
    update member
    set
    search = 0
    where member_id = #{member_id}
  </update>



  <!--delete-->

  <delete id="delete" parameterType="int">
    delete from member where member_id = #{member_id}
  </delete>

</mapper>