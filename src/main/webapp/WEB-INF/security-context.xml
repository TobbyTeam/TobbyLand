<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- enable use-expressions -->
    <http pattern="/resources/**" security="none"/>
    <http pattern="/favicon.ico" security="none" />

    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/login*" access="isAnonymous()" />
        <intercept-url pattern="/member/view" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/member/pwConfirm" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/member/modView" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/member/mod" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/member/pwChange" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/member/pwCheck" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/member/pwMod" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/member/modNickCheck" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/member/withdrawal" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/member/event" access="hasRole('ROLE_MANAGER')" />
        <intercept-url pattern="/member/**" access="isAnonymous()" />
        <intercept-url pattern="/evaluation/**" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/lecture/**" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/board/list/**" access="permitAll" />
        <intercept-url pattern="/board/view/14/**" access="permitAll" />
        <intercept-url pattern="/board/view/15/**" access="permitAll" />
        <intercept-url pattern="/board/**" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/**" access="permitAll" />

        <!-- access denied page -->
        <access-denied-handler error-page="/403" />

        <form-login
                username-parameter="loginid"
                password-parameter="loginpwd"
                login-page="/login"
                default-target-url="/main"
                authentication-success-handler-ref="customAuthenticationSuccessHandler"
                authentication-failure-handler-ref="customAuthenticationFailureHandler"
        />

        <logout invalidate-session="true" logout-success-url="/main"  />

        <session-management>
            <concurrency-control max-sessions="1" expired-url="/login?message=timeout" error-if-maximum-exceeded="true" />
        </session-management>

        <custom-filter after="EXCEPTION_TRANSLATION_FILTER" ref="ajaxSessionTimeoutFilter"/>

    </http>

    <beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />   
     
    <authentication-manager>
            <authentication-provider user-service-ref="customJdbcDaoImpl">
                <password-encoder ref="bcryptPasswordEncoder" />
            </authentication-provider>
    </authentication-manager>

    <beans:bean id="customJdbcDaoImpl" class="kr.ac.kpu.ebiz.spring.tobbyproject.security.CustomJdbcDaoImpl">
            <beans:property name="dataSource" ref="dataSource1"/>
            <beans:property name="rolePrefix" value="" />
            <beans:property name="usersByUsernameQuery" value="select member_id, user_id, password, enabled, nonlocked, nickname from member where user_id = ?" />
            <beans:property name="authoritiesByUsernameQuery" value="select role from member_role where member_id = (select member_id from member where user_id = ?)" />
            <beans:property name="enableGroups" value="false" />
    </beans:bean>
    
    <beans:bean id="dataSource1" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <beans:constructor-arg ref="pooledDataSource1"/>
        <beans:property name="logFormatter">
            <beans:bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                <beans:property name="sqlPrefix" value="[SQL]  "/>
            </beans:bean>
        </beans:property>
    </beans:bean>

    <beans:bean id="pooledDataSource1" class="com.zaxxer.hikari.HikariDataSource">
        <beans:property name="driverClassName" value="${jdbc.driver}"/>
        <beans:property name="jdbcUrl" value="${jdbc.url}"/>
        <beans:property name="username" value="${jdbc.username}"/>
        <beans:property name="password" value="${jdbc.password}"/>
        <beans:property name="minimumIdle" value="${jdbc.min.pool}"/>
        <beans:property name="maximumPoolSize" value="${jdbc.max.pool}"/>
        <beans:property name="connectionTestQuery" value="select 1"/>
        <beans:property name="registerMbeans" value="true"/>
        <beans:property name="dataSourceProperties">
            <beans:props>
                <beans:prop key="cachePrepStmts">true</beans:prop>
                <beans:prop key="prepStmtCacheSize">250</beans:prop>
                <beans:prop key="prepStmtCacheSqlLimit">2048</beans:prop>
                <beans:prop key="useServerPrepStmts">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>

    <beans:bean id="customAuthenticationSuccessHandler" class="kr.ac.kpu.ebiz.spring.tobbyproject.security.CustomAuthenticationSuccessHandler">
        <beans:property name="targetUrlParameter" value="loginRedirect" />
        <beans:property name="useReferer" value="false" />
        <beans:property name="defaultUrl" value="/main" />
    </beans:bean>

    <beans:bean id="customAuthenticationFailureHandler" class="kr.ac.kpu.ebiz.spring.tobbyproject.security.CustomAuthenticationFailureHandler">
        <beans:property name="loginidname" value="loginid" />
        <beans:property name="loginpasswdname" value="loginpwd" />
        <beans:property name="loginredirectname" value="loginRedirect" />
        <beans:property name="exceptionmsgname" value="securityexceptionmsg" />
        <beans:property name="defaultFailureUrl" value="/login?message=fail" />
    </beans:bean>

    <beans:bean id="ajaxSessionTimeoutFilter" class="kr.ac.kpu.ebiz.spring.tobbyproject.security.AjaxSessionTimeoutFilter">
        <beans:property name="ajaxHeader" value="AJAX" />
    </beans:bean>
    
</beans:beans>