<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
					http://www.springframework.org/schema/beans/spring-beans.xsd
					http://www.springframework.org/schema/security
					http://www.springframework.org/schema/security/spring-security-3.2.xsd">

        <!-- enable use-expressions -->
    <security:http pattern="/resources/**" security="none"></security:http>


    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/login" access="isAnonymous()" />
        <security:intercept-url pattern="/member/view" access="hasRole('ROLE_ADMIN')" />
        <security:intercept-url pattern="/member/password" access="hasRole('ROLE_ADMIN')" />
        <security:intercept-url pattern="/member/modView" access="hasRole('ROLE_ADMIN')" />
        <security:intercept-url pattern="/member/mod" access="hasRole('ROLE_ADMIN')" />
        <security:intercept-url pattern="/member/**" access="isAnonymous()" />
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
<!--        <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')" />-->

        <!-- access denied page -->
        <security:access-denied-handler error-page="/403" />

        <security:form-login
                username-parameter="member_id"
                password-parameter="password"
                login-page="/login"
                default-target-url="/main"
                authentication-failure-url="/login?fail=true"/>

        <security:logout invalidate-session="true" logout-success-url="/login?logout"  />

        <security:session-management>
            <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
        </security:session-management>

    </security:http>

    <!-- Select users and user_roles from database -->

    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource1"
                                        users-by-username-query=
                                                "select member_id, password, enabled from member where member_id = ?"
                                        authorities-by-username-query=
                                                "select member_id, role from member_role where member_id = ?  " />
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="dataSource1" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg ref="pooledDataSource1"/>
        <property name="logFormatter">
            <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                <property name="sqlPrefix" value="[SQL]  "/>
            </bean>
        </property>
    </bean>

    <bean id="pooledDataSource1" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="minimumIdle" value="${jdbc.min.pool}"/>
        <property name="maximumPoolSize" value="${jdbc.max.pool}"/>
        <property name="connectionTestQuery" value="select 1"/>
        <property name="registerMbeans" value="true"/>
        <property name="dataSourceProperties">
            <props>
                <prop key="cachePrepStmts">true</prop>
                <prop key="prepStmtCacheSize">250</prop>
                <prop key="prepStmtCacheSqlLimit">2048</prop>
                <prop key="useServerPrepStmts">true</prop>
            </props>
        </property>
    </bean>

</beans>